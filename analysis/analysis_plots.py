import pandas as pd
import matplotlib.pyplot as plt
file_path = '/home/akshaj/15min_data_new.csv'  
data = pd.read_csv(file_path)
data['Time_sec'] = data['Time_sec'] + data['Time_nsec'] / 1e9
data['Time_sec'] -= data['Time_sec'].iloc[0]
def format_label(label):
    return ' '.join(word.capitalize() for word in label.replace('_', ' ').split())
def plot_data(data, x_col, y_col, z_col, title, unit):
    df = data[['Time_sec', x_col, y_col, z_col]].dropna()
    df[x_col] = df[x_col].astype(float)
    df[y_col] = df[y_col].astype(float)
    df[z_col] = df[z_col].astype(float)
    time = df['Time_sec'].to_numpy()
    x_data = df[x_col].to_numpy()
    y_data = df[y_col].to_numpy()
    z_data = df[z_col].to_numpy()
    fig, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=(12, 12), sharex=True)
    ax1.plot(time, x_data, color='r', label=f'{format_label(x_col)} ({unit})')
    ax1.set_ylabel(f'{format_label(x_col)} ({unit})')
    ax1.set_title(f'{format_label(x_col)} vs Time')
    ax1.legend(loc='upper right')
    ax1.grid(True)
    ax2.plot(time, y_data, color='g', label=f'{format_label(y_col)} ({unit})')
    ax2.set_ylabel(f'{format_label(y_col)} ({unit})')
    ax2.set_title(f'{format_label(y_col)} vs Time')
    ax2.legend(loc='upper right')
    ax2.grid(True)
    ax3.plot(time, z_data, color='b', label=f'{format_label(z_col)} ({unit})')
    ax3.set_xlabel('Time (seconds)')
    ax3.set_ylabel(f'{format_label(z_col)} ({unit})')
    ax3.set_title(f'{format_label(z_col)} vs Time')
    ax3.legend(loc='upper right')
    ax3.grid(True)
    plt.tight_layout()
    plt.show()
    x_deviation = x_data - x_data.mean()
    y_deviation = y_data - y_data.mean()
    z_deviation = z_data - z_data.mean()
    plt.figure(figsize=(12, 6))
    plt.plot(time, x_deviation, label=f'{format_label(x_col)} Deviation ({unit})', color='r')
    plt.plot(time, y_deviation, label=f'{format_label(y_col)} Deviation ({unit})', color='g')
    plt.plot(time, z_deviation, label=f'{format_label(z_col)} Deviation ({unit})', color='b')
    plt.title(f'Mean Deviation of {title} vs Time')
    plt.xlabel('Time (seconds)')
    plt.ylabel(f'Deviation from Mean ({unit})')
    plt.legend()
    plt.grid()
    plt.show()
    plt.figure(figsize=(12, 8))
    plt.subplot(3, 1, 1)
    plt.hist(x_data, bins=50, color='r', alpha=0.7, label=f'{format_label(x_col)} ({unit})')
    plt.title(f'Histogram of {format_label(x_col)}')
    plt.xlabel(f'{format_label(x_col)} ({unit})')
    plt.ylabel('Frequency')
    plt.legend()
    plt.subplot(3, 1, 2)
    plt.hist(y_data, bins=50, color='g', alpha=0.7, label=f'{format_label(y_col)} ({unit})')
    plt.title(f'Histogram of {format_label(y_col)}')
    plt.xlabel(f'{format_label(y_col)} ({unit})')
    plt.ylabel('Frequency')
    plt.legend()
    plt.subplot(3, 1, 3)
    plt.hist(z_data, bins=50, color='b', alpha=0.7, label=f'{format_label(z_col)} ({unit})')
    plt.title(f'Histogram of {format_label(z_col)}')
    plt.xlabel(f'{format_label(z_col)} ({unit})')
    plt.ylabel('Frequency')
    plt.legend()
    plt.tight_layout()
    plt.show()
plot_data(data, 'Angular_velocity_x', 'Angular_velocity_y', 'Angular_velocity_z', 'Angular Velocity', 'rad/s')
plot_data(data, 'Magnetic_field_x', 'Magnetic_field_y', 'Magnetic_field_z', 'Magnetic Field', 'Tesla')
plot_data(data, 'Linear_acceleration_x', 'Linear_acceleration_y', 'Linear_acceleration_z', 'Linear Acceleration', 'm/sÂ²')
plot_data(data, 'Roll', 'Pitch', 'Yaw', 'Orientation', 'degrees')